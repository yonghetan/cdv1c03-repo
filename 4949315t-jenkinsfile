pipeline {

    agent {
        node {
            label 'master'
        }
    }

    tools { 
        maven 'maven-4949315t' 
    }

    options {
        buildDiscarder logRotator( 
                    daysToKeepStr: '15', 
                    numToKeepStr: '10'
            )
    }

    environment {
        APP_NAME = "TANYONGHE"
        APP_ENV  = "DEV"
    }

    stages {
        
        stage('ST1-4949315t') {
            steps {
                echo "ST1-4949315t: Setup Release Environment Completed."
            }
        }
		
        stage('ST2-4949315t') {
            steps {
		script {
                    // Remove existing container if it exists
                    sh """
                        if docker container inspect svr-4949315t >/dev/null 2>&1; then
                            docker stop svr-4949315t
                            docker rm svr-4949315t
                        fi
                    """
                    
                    // Create and run new container
                    sh "docker run -d --name svr-4949315t -p 32700:80 svr-image-4949315t"
                    
                    // Verify container is running
                    sh "docker ps -f name=svr-4949315t"
                }
                echo "ST2-4949315t: Server1 is successfully created"
            }
        }
		
        stage('ST3-4949315t') {
            steps {
                echo "ST3-4949315t: Server1 is healthy â€“ Health check done"
            }
        }
		
        stage('ST4-Parallel-4949315t') {
		parallel {
		        stage('ST4A-4949315t') {
		            steps {
		                echo "ST4A-4949315t: SQLI Check Completed"
		            }
		        }

		        stage('ST4B-4949315t') {
		            steps {
		                echo "ST4B-4949315t: XSS Check Completed"
		            }
		        }
		}
        }
		
        stage('ST5-4949315t') {
            steps {
               script {
                    def userInput = input(
                        id: 'userInput', 
                        message: 'Continue the pipeline?', 
                        parameters: [
                            choice(
                                name: '',
                                choices: ['Proceed', 'Abort'],
                                description: 'Choose whether to continue the pipeline'
                            )
                        ]
                    )
                    if (userInput == 'Abort') {
                        currentBuild.result = 'ABORTED'
                        error('Pipeline was aborted by user')
                    }
		}
            }
        }
		
        stage('ST6-4949315t') {
            steps {
                echo "ST6-4949315t : Ready for next phase"
            }
        }
    }   
}
